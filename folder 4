// two elements whose sum is closest to zero
# include <iostream>
# include <stdlib.h>
# include <math.h>
using namespace std;
void closest(int arr[], int n)
{
	int  count = 0;
	int i, j, msum, sum,l,r;
	 l = 0;
	 r = 1;
	 msum = arr[0] + arr[1];
	
	for(i = 0; i < n - 1; i++)
	{
		for(j = l + 1; j < n; j++)
		{
		sum = arr[i] + arr[j];
		if(abs(msum) > abs(sum))
		{
			msum = sum;
			l = i;
			r = j;
		}
		}
	}
	cout<< arr[l] << " and " << arr[r];
}
int main()
{
	int arr[10],i,n ;
	cin>>n;
	for(i=0;i<n;i++)
	{
	    cin>>arr[i];
	}
	closest(arr, n);
	return 0;
}



//duplicates in array
#include <iostream>
using namespace std;
   
int main()  
{  
    int arr[10],n,i,j;
    cin>>n;
    for(i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(i = 0; i < n; i++) {  
        for(j = i + 1; j < n; j++) {  
            if(arr[i] == arr[j])  
                cout<<"\t"<<arr[j];  
        }  
    }  
    return 0;  
}  


//minimum distance between two numbers in array
#include <bits/stdc++.h>
using namespace std;
int mindis(int arr[], int n,int x,int y)
{
    int i, j;
    int dist = INT_MAX;
    for (i = 0; i < n; i++)
    {
        for (j = i+1; j < n; j++)
        {
            if( (x == arr[i] && y == arr[j] ||
                y == arr[i] && x == arr[j]) &&
                dist > abs(i-j))
            {
                dist =abs(i-j);
            }
        }
    }
    cout<<dist;
}
int main()
{
    int arr[10],i,n,x,y;
    cin>>n;
    for(i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    cin>>x>>y;
    mindis(arr,n,x,y);
}
 
